<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xac="http://schemas.restless.com/xaml/controls">
    
    <!-- Resources for items inside a ToolBar -->
    
    <!-- Images -->
    <BitmapImage x:Key="ImageArrowLeft" UriSource="/GradientEditor;component/Resources/Images/Image.Arrow.Left.72.png"/>
    <BitmapImage x:Key="ImageArrowRight" UriSource="/GradientEditor;component/Resources/Images/Image.Arrow.Right.72.png"/>
    <BitmapImage x:Key="ImagePlus" UriSource="/GradientEditor;component/Resources/Images/Image.Plus.72.png"/>
    <BitmapImage x:Key="ImageMinus" UriSource="/GradientEditor;component/Resources/Images/Image.Minus.72.png"/>
    <BitmapImage x:Key="ImageReset" UriSource="/GradientEditor;component/Resources/Images/Image.Reset.72.png"/>
    <BitmapImage x:Key="ImageClipboard" UriSource="/GradientEditor;component/Resources/Images/Image.Clipboard.72.png"/>
    <BitmapImage x:Key="ImageSpread" UriSource="/GradientEditor;component/Resources/Images/Image.Spread.72.png"/>
    
    <!-- HeaderedContentControl used inside a Toolbar -->
    <Style TargetType="HeaderedContentControl">
        <Setter Property="Margin" Value="8,4,8,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Margin="0,0,0,0" Padding="10,0" SnapsToDevicePixels="True">
                        <TextBlock FontSize="11" Foreground="#808080" HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{TemplateBinding Content}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ContentPresenter 
                            Grid.Row="0"
                            VerticalAlignment="Center"
                            ContentSource="Content" 
                            ContentTemplate="{TemplateBinding ContentTemplate}" />

                        <ContentPresenter 
                            Grid.Row="1"
                            VerticalAlignment="Bottom"
                            ContentSource="Header" 
                            ContentTemplate="{TemplateBinding HeaderTemplate}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock of a ToolBar. Note: Does not have static Resource key like other controls -->
    <Style TargetType="TextBlock">
        <Setter Property="Margin" Value="2,0,6,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Storyboard used to fade the text message in -->
    <Storyboard x:Key="StoryboardFadeIn">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.350"/>
    </Storyboard>
    
    <!-- Storyboard used to fade the text message out -->
    <Storyboard x:Key="StoryboardFadeOut">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:7.0"/>
    </Storyboard>

    <Style TargetType="TextBlock" x:Key="TextBlockOpMessage" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="2,0,0,8"/>
        <Setter Property="Foreground" Value="#D00"/>
    </Style>

    <!-- Separator of a Toolbar, must use static Resource key from Toolbar -->
    <Style TargetType="Separator" x:Key="{x:Static ToolBar.SeparatorStyleKey}">
        <Setter Property="Margin" Value="8,2"/>
        <Setter Property="Background" Value="#CCC"/>
        <Setter Property="Width" Value="3"/>
    </Style>

    <!-- Button of a Toolbar, must use static Resource key from Toolbar -->
    <!-- Note: In this case, we're basing this style on the built in one. -->
    <!-- It won't work like Separator because the buttons are not DIRECT children of the ToolBar. -->
    <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Margin" Value="6,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!-- ImageTextButton of a ToolBar -->
    <Style TargetType="xac:ImageTextButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ImageHeight" Value="48"/>
        <Setter Property="ImageWidth" Value="48"/>
    </Style>















</ResourceDictionary>